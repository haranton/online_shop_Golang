name: Test and Deploy to Root Server

on:
  push:
    branches:
      - main

jobs:
  # --- 1. –ü—Ä–æ–≥–æ–Ω —Ç–µ—Å—Ç–æ–≤ ---
  test:
    name: Run Go Tests in Docker
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run tests with docker-compose
        run: |
          cd $GITHUB_WORKSPACE
          git pull
          docker compose -f docker-compose.yml --profile test up --build --abort-on-container-exit --attach-dependencies tests
          docker compose down -v

  # --- 2. –î–µ–ø–ª–æ–π ---
  deploy:
    name: Deploy to Root Server
    runs-on: ubuntu-latest
    needs: test  
    environment: env

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client
          echo "SSH_HOST='${{ secrets.SSH_ROOT_HOST }}'"
          echo "SSH_PORT='${{ secrets.SSH_ROOT_PORT }}'"
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_ROOT_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          if [ -z "${{ secrets.SSH_ROOT_PORT }}" ]; then
            ssh-keyscan -H ${{ secrets.SSH_ROOT_HOST }} >> ~/.ssh/known_hosts
          else
            ssh-keyscan -H -p ${{ secrets.SSH_ROOT_PORT }} ${{ secrets.SSH_ROOT_HOST }} >> ~/.ssh/known_hosts
          fi

      - name: Deploy via Git pull on server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_ROOT_HOST }}
          username: root
          key: ${{ secrets.SSH_ROOT_KEY }}
          port: ${{ secrets.SSH_ROOT_PORT }}
          script: |
            set -e
            docker compose version || docker-compose version

            APP_DIR="/opt/api_online_shop"

            # –°–æ–∑–¥–∞—ë–º –∫–∞—Ç–∞–ª–æ–≥, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if [ ! -d "$APP_DIR" ]; then
              mkdir -p "$APP_DIR"
              echo "Created directory $APP_DIR"
            fi

            cd "$APP_DIR"

            # –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç
            if [ ! -d .git ]; then
              git clone https://github.com/haranton/online_shop_Golang.git .
            else
              git pull
            fi

            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
            docker compose down
            docker compose pull
            docker compose up -d --build

            echo "üöÄ Deployment completed successfully in $APP_DIR"
