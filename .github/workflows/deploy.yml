name: Deploy to Root Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: env

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client
          echo "SSH_HOST='${{ secrets.SSH_ROOT_HOST }}'"
          echo "SSH_PORT='${{ secrets.SSH_ROOT_PORT }}'"
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_ROOT_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          if [ -z "${{ secrets.SSH_ROOT_PORT }}" ]; then
            ssh-keyscan -H ${{ secrets.SSH_ROOT_HOST }} >> ~/.ssh/known_hosts
          else
            ssh-keyscan -H -p ${{ secrets.SSH_ROOT_PORT }} ${{ secrets.SSH_ROOT_HOST }} >> ~/.ssh/known_hosts
          fi

      - name: Deploy via Git pull on server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_ROOT_HOST }}
          username: root
          key: ${{ secrets.SSH_ROOT_KEY }}
          port: ${{ secrets.SSH_ROOT_PORT }}
          script: |
            set -e
            # Проверка и установка docker-compose
            if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
              echo "Installing Docker Compose..."
              apt-get update -y
              apt-get install -y curl docker-compose-plugin
              # Если плагин не появился — установить бинарник вручную
              if ! command -v docker compose &> /dev/null; then
                curl -SL "https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                chmod +x /usr/local/bin/docker-compose
              fi
            fi
            # Проверяем, что compose установлен
            docker compose version || docker-compose version
            # Клонируем / обновляем репозиторий
            if [ ! -d /root/app ]; then
              git clone https://github.com/haranton/online_shop_Golang.git /root/app
            else
              cd /root/app
              git pull
            fi      
            cd /root/app

            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker-compose pull
            docker-compose up -d --build

