version: '3.8'

services:

  api:
    build: .
    container_name: api
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - db
    restart: always
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: db
      POSTGRES_PASSWORD: db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U db"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  tests:
    build:
      context: .
      dockerfile: dockerfile
      target: builder 
    env_file:
    - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://db:db@db:5432/db_test?sslmode=disable
    command: sh -c "go test -v ./internal/tests"

volumes:
  postgres_data:
