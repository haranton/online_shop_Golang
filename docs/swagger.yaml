definitions:
  dto.Items:
    properties:
      productID:
        type: integer
      quantity:
        type: integer
    type: object
  dto.OrderCreateRequest:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.Items'
        type: array
      user_id:
        type: integer
    type: object
  dto.OrderUpdateRequest:
    properties:
      status:
        $ref: '#/definitions/models.StatusOrder'
    type: object
  models.Category:
    properties:
      id:
        type: integer
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.Order:
    properties:
      id:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.OrderProduct'
        type: array
      status:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userID:
        type: integer
    type: object
  models.OrderProduct:
    properties:
      order:
        $ref: '#/definitions/models.Order'
      orderID:
        type: integer
      product:
        $ref: '#/definitions/models.Product'
      productID:
        type: integer
      quantity:
        type: integer
    type: object
  models.Product:
    properties:
      category:
        $ref: '#/definitions/models.Category'
      categoryID:
        type: integer
      count:
        type: integer
      id:
        type: integer
      name:
        type: string
      orderProducts:
        items:
          $ref: '#/definitions/models.OrderProduct'
        type: array
    type: object
  models.StatusOrder:
    enum:
    - New
    - Processing
    - Cancelled
    type: string
    x-enum-varnames:
    - StatusNew
    - StatusProcessing
    - StatusCancelled
  models.User:
    properties:
      id:
        type: integer
      login:
        type: string
      orders:
        items:
          $ref: '#/definitions/models.Order'
        type: array
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/categories:
    get:
      description: Возвращает список всех категорий товаров
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить список категорий
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Добавляет новую категорию товаров
      parameters:
      - description: Данные категории
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Некорректные данные
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создать категорию
      tags:
      - Categories
  /api/categories/{id}:
    delete:
      description: Удаляет категорию по ID
      parameters:
      - description: ID категории
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Категория успешно удалена
          schema:
            type: string
        "400":
          description: Некорректный ID
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Удалить категорию
      tags:
      - Categories
    get:
      description: Возвращает категорию по её идентификатору
      parameters:
      - description: ID категории
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Некорректный ID
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить категорию по ID
      tags:
      - Categories
    put:
      consumes:
      - application/json
      description: Обновляет данные категории по ID
      parameters:
      - description: Обновленные данные категории
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Некорректные данные
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Обновить категорию
      tags:
      - Categories
  /api/orders:
    post:
      consumes:
      - application/json
      description: Создает новый заказ пользователя с указанными товарами
      parameters:
      - description: Данные для создания заказа
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.OrderCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создать заказ
      tags:
      - Orders
  /api/orders/{id}:
    delete:
      description: Удаляет заказ по ID
      parameters:
      - description: ID заказа
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Удалено успешно
          schema:
            type: string
        "400":
          description: Некорректный ID
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Удалить заказ
      tags:
      - Orders
    get:
      description: Возвращает информацию о заказе по его идентификатору
      parameters:
      - description: ID заказа
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Некорректный ID
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить заказ по ID
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Изменяет статус заказа по ID
      parameters:
      - description: ID заказа
        in: path
        name: id
        required: true
        type: integer
      - description: Новый статус
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.OrderUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Обновить статус заказа
      tags:
      - Orders
  /api/orders/{orderId}/products/{productId}:
    delete:
      description: Удаляет товар из указанного заказа по ID заказа и товара
      parameters:
      - description: ID заказа
        in: path
        name: orderId
        required: true
        type: integer
      - description: ID товара
        in: path
        name: productId
        required: true
        type: integer
      responses:
        "204":
          description: Товар удален из заказа
          schema:
            type: string
        "400":
          description: Некорректные параметры
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Удалить товар из заказа
      tags:
      - Orders
  /api/products:
    get:
      description: Возвращает список всех доступных товаров
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить список товаров
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Добавляет новый товар в систему
      parameters:
      - description: Данные нового товара
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Некорректные данные
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создать товар
      tags:
      - Products
  /api/products/{id}:
    delete:
      description: Удаляет товар по ID
      parameters:
      - description: ID товара
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Товар успешно удален
          schema:
            type: string
        "400":
          description: Некорректный ID
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Удалить товар
      tags:
      - Products
    get:
      description: Возвращает информацию о товаре по его идентификатору
      parameters:
      - description: ID товара
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Некорректный ID
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить товар по ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Обновляет информацию о товаре по ID
      parameters:
      - description: Обновленные данные товара
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Некорректные данные
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Обновить товар
      tags:
      - Products
  /api/users:
    get:
      description: Возвращает список всех зарегистрированных пользователей
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить список пользователей
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя в системе
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректные данные
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создать пользователя
      tags:
      - Users
  /api/users/{id}:
    delete:
      description: Удаляет пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Пользователь успешно удален
          schema:
            type: string
        "400":
          description: Некорректный ID
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Удалить пользователя
      tags:
      - Users
    get:
      description: Возвращает данные пользователя по его идентификатору
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректный ID
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить пользователя по ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Обновляет информацию о пользователе по его ID
      parameters:
      - description: Обновленные данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректные данные
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Обновить данные пользователя
      tags:
      - Users
  /api/users/{id}/orders:
    get:
      description: Возвращает все заказы, принадлежащие конкретному пользователю
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "400":
          description: Некорректный ID
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получить заказы пользователя
      tags:
      - Orders
swagger: "2.0"
